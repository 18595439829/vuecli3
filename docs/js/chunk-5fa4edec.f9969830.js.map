{"version":3,"sources":["webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js"],"names":["ARRAY_BUFFER","JSON","TEXT","XML","Property","RENDER_ORDER","VectorLayer","Layer","opt_options","options","baseOptions","style","renderBuffer","updateWhileAnimating","updateWhileInteracting","call","this","declutter_","undefined","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VECTOR","type","__proto__","prototype","Object","create","constructor","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","get","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","set","changed","getRenderMode","getSource","Feature","BaseObject","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","setProperties","clone","getProperties","setGeometryName","getGeometryName","getGeometry","getId","handleGeometryChange_","CHANGE","createStyleFunction","setId","id","name","obj","styles","Array","isArray","getZIndex","loadFeaturesXhr","url","format","success","failure","extent","resolution","projection","xhr","XMLHttpRequest","open","getType","FormatType","responseType","onload","event","status","source","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","bind","onerror","send","features","dataProjection","sourceOrTile","addFeatures","Infinity","ADDFEATURE","CHANGEFEATURE","CLEAR","REMOVEFEATURE","opt_maxEntries","rbush_","items_","insert","value","item","minX","minY","maxX","maxY","load","extents","values","items","length","i","l","remove","uid","update","bbox","getAll","all","map","getInExtent","search","forEach","callback","opt_this","forEach_","forEachInExtent","result","isEmpty","clear","getExtent","opt_extent","data","toJSON","concat","rbush","VectorSourceEvent","Event","opt_feature","feature","Source","VectorSource","attributions","state","READY","wrapX","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","getArray","Collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","dispatchEvent","VectorEventType","EventType","handleFeatureChange_","ObjectEventType","PROPERTYCHANGE","valid","toString","newFeatures","geometryFeatures","push","i$1","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","evt","CollectionEventType","ADD","REMOVE","removeFeature","opt_fast","featureId","keys","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","filter","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","this$1","loadedExtentsRtree","extentsToLoad","loading","loop","ii","extentToLoad","alreadyLoaded","object","slice","removeLoadedExtent","removed","setLoader","Style","geometry_","geometryFunction_","defaultGeometryFunction","fill_","fill","image_","image","renderer_","renderer","stroke_","stroke","text_","text","zIndex_","zIndex","toFunction","styleFunction","getFill","getImage","getStroke","getText","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","defaultStyles","createDefaultStyle","color","width","radius","createEditingStyle","white","blue","POLYGON","MULTI_POLYGON","LINE_STRING","MULTI_LINE_STRING","CIRCLE","POINT","MULTI_POINT","GEOMETRY_COLLECTION","Fill","color_","checksum_","getColor","setColor","getChecksum","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","getWidth","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scale","getOpacity","getScale","getRotation","getRotateWithView","getSnapToPixel","getAnchor","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","snapToPixel","listenImageChange","listener","thisArg","unlistenImageChange","RegularShape","checksums_","canvas_","hitDetectionCanvas_","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","angle","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getPoints","getRadius","getRadius2","getAngle","ImageState","LOADED","imageSize","strokeStyle","strokeWidth","size","renderOptions","context","canvas","draw_","createHitDetectionCanvas_","round","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","info","add","offsetX","offsetY","hitImage","height","angle0","radiusC","setTransform","translate","beginPath","arc","PI","lineTo","cos","sin","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","recalculate","checksum","Image","CircleStyle","setRadius"],"mappings":"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","file":"js/chunk-5fa4edec.f9969830.js","sourcesContent":["/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map"],"sourceRoot":""}