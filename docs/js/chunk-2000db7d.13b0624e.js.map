{"version":3,"sources":["webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./src/views/ol/ShiLiangTuCeng.vue?0d75","webpack:///src/views/ol/ShiLiangTuCeng.vue","webpack:///./src/views/ol/ShiLiangTuCeng.vue?f650","webpack:///./src/views/ol/ShiLiangTuCeng.vue","webpack:///./src/views/ol/ShiLiangTuCeng.vue?2b8b","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./src/views/ol/ShiLiangTuCeng.vue?9a09","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_LEFT","TOP_CENTER","TOP_RIGHT","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","BaseObject","Overlay","options","call","this","id","insertFirst","undefined","stopEvent","element","document","createElement","className","style","position","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","OverlayPositioning","setPosition","__proto__","prototype","Object","create","constructor","getElement","get","getId","getMap","getOffset","getPosition","getPositioning","appendChild","map","MapEventType","POSTRENDER","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","panIntoView","set","setMap","getTargetElement","mapRect","getRect","getSize","overlayRect","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","Math","abs","center","getView","getCenter","centerPx","getPixelFromCoordinate","newCenterPx","animate","getCoordinateFromPixel","duration","easing","size","box","getBoundingClientRect","offsetX","left","window","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","mapSize","updateRenderedPosition","right","round","offsetWidth","bottom","offsetHeight","getOptions","flags","f","RegExp","configurable","_vm","_h","$createElement","_c","_self","class","$style","attrs","_v","ref","imgurl","staticRenderFns","name","data","fill","color","stroke","width","text","font","highlightStyle","vectorLayer","source","url","format","featureOverlay","highlight","mounted","initMap","$nextTick","console","methods","Map","target","layers","view","zoom","controls","addLayer","layerXYZ","addOverlay","marker","displayFeatureInfo","feature","info","getSource","removeFeature","addFeature","injectStyles","context","locals","component","module","exports","anObject","$flags","DESCRIPTORS","TO_STRING","$toString","define","fn","R","concat","DEFAULT_FILL_COLOR","Text","opt_options","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","clone","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","getLastExtent","getType","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","features","writeGeometry","geometry","transformWithOptions","write","transformed","Array","isArray","transform","decimals","power","pow","coordinates","i","ii","length","applyTransform","FeatureFormat","JSONFeature","FormatType","JSON","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","Geometry","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","EventType","CHANGE","changed","geometryCollection","setGeometries","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","geometries","containsXY","computeExtent","extent","getGeometries","cloneGeometries","getGeometriesArray","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","key","toString","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","push","simplifiedGeometryCollection","setGeometriesArray","GeometryType","GEOMETRY_COLLECTION","intersectsExtent","isEmpty","rotate","angle","anchor","sx","opt_sy","opt_anchor","transformFn","translate","deltaX","deltaY","disposeInternal","clonedGeometries","GeoJSON","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","Feature","setGeometryName","setGeometry","setId","setProperties","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","projection","crs","properties","getGeometry","getProperties","getGeometryName","objects","type","readPointGeometry","LINE_STRING","readLineStringGeometry","POLYGON","readPolygonGeometry","MULTI_POINT","readMultiPointGeometry","MULTI_LINE_STRING","readMultiLineStringGeometry","MULTI_POLYGON","readMultiPolygonGeometry","readGeometryCollectionGeometry","Error","Point","LineString","MultiLineString","MultiPoint","MultiPolygon","Polygon","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","CIRCLE","getCoordinates","rightHanded","_defineProperty","obj","value","defineProperty","enumerable","writable"],"mappings":"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","file":"js/chunk-2000db7d.13b0624e.js","sourcesContent":["/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{class:_vm.$style['map'],attrs:{\"id\":\"map\"}}),_c('div',{attrs:{\"id\":\"info\"}},[_vm._v(\" \")]),_c('div',{ref:\"kaola\",class:_vm.$style['kaola']},[_c('img',{attrs:{\"src\":_vm.imgurl,\"alt\":\"\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div id=\"map\" :class=\"$style['map']\"></div>\n    <div id=\"info\">&nbsp;</div>\n    <div ref=\"kaola\" :class=\"$style['kaola']\">\n      <img :src=\"imgurl\" alt=\"\">\n    </div>\n  </div>\n</template>\n<script>\nimport Map from \"ol/Map.js\";\nimport View from \"ol/View.js\";\nimport Overlay from 'ol/Overlay.js';\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM.js\";\nimport XYZ from \"ol/source/XYZ.js\";\nimport { fromLonLat, transform } from \"ol/proj.js\";\nimport GeoJSON from \"ol/format/GeoJSON.js\";\nimport VectorLayer from \"ol/layer/Vector.js\";\nimport VectorSource from \"ol/source/Vector.js\";\nimport { Fill, Stroke, Style, Text } from \"ol/style.js\";\n\nimport imgurl from '@/assets/img/Koala.jpg';\n\nexport default {\n  name: \"ShiLiangTuCeng\",\n  data() {\n    return {\n      map: null,\n      imgurl,\n      style: new Style({\n        fill: new Fill({\n          color: \"rgba(255, 255, 255, 0.6)\"\n        }),\n        stroke: new Stroke({\n          color: \"#319FD3\",\n          width: 1\n        }),\n        text: new Text({\n          font: \"12px Calibri,sans-serif\",\n          fill: new Fill({\n            color: \"#000\"\n          }),\n          stroke: new Stroke({\n            color: \"#fff\",\n            width: 3\n          })\n        })\n      }),\n      highlightStyle: new Style({\n        stroke: new Stroke({\n          color: \"#f00\",\n          width: 1\n        }),\n        fill: new Fill({\n          color: \"rgba(255,0,0,0.1)\"\n        }),\n        text: new Text({\n          font: \"12px Calibri,sans-serif\",\n          fill: new Fill({\n            color: \"#000\"\n          }),\n          stroke: new Stroke({\n            color: \"#f00\",\n            width: 3\n          })\n        })\n      }),\n      vectorLayer: new VectorLayer({\n        source: new VectorSource({\n          url: \"data/geojson/countries.geojson\",\n          format: new GeoJSON()\n        }),\n        style: feature => {\n          this.style.getText().setText(feature.get(\"name\"));\n          return style;\n        }\n      }),\n      featureOverlay: new VectorLayer({\n        source: new VectorSource(),\n        map: this.map,\n        style: feature => {\n          this.highlightStyle.getText().setText(feature.get(\"name\"));\n          return highlightStyle;\n        }\n      }),\n      highlight: null,\n      map: null\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.$nextTick(() => {\n      this.map.on(\"rendercomplete\", evt => {\n        console.log(evt);\n        // if (evt.dragging) {\n        //   return;\n        // }\n        // 获取鼠标的像素点位\n        // let pixel = this.map.getEventPixel(evt.originalEvent);\n        // this.displayFeatureInfo(pixel);\n      });\n\n      this.map.on(\"click\", evt => {\n        let xy = this.map.getCoordinateFromPixel(evt.pixel)\n        console.log(evt, xy, fromLonLat(xy));\n        // this.displayFeatureInfo(evt.pixel);\n      });\n    });\n  },\n  methods: {\n    initMap() {\n      this.map = new Map({\n        target: \"map\",\n        layers: [\n          new TileLayer({\n            source: new OSM()\n          })\n        ],\n        view: new View({\n          // center: fromLonLat([120.15, 30.28]),\n          center: [13379936.9339429, 3528007.173944956],\n          zoom: 18\n        }),\n        controls: []\n      });\n      let layerXYZ = new TileLayer({\n        source: new XYZ()\n      });\n      this.map.addLayer(layerXYZ);\n       let marker = new Overlay({\n        position: [13379936.9339429, 3528007.173944956],\n        positioning: 'center-center',\n        element: this.$refs.kaola,\n        stopEvent: false\n      });\n      this.map.addOverlay(marker)\n    },\n    displayFeatureInfo(pixel) {\n      let feature = this.map.forEachFeatureAtPixel(pixel, function(feature) {\n        return feature;\n      });\n      let info = document.getElementById(\"info\");\n      if (feature) {\n        info.innerHTML = feature.getId() + \": \" + feature.get(\"name\");\n      } else {\n        info.innerHTML = \"&nbsp;\";\n      }\n\n      if (feature !== this.highlight) {\n        if (this.highlight) {\n          this.featureOverlay.getSource().removeFeature(this.highlight);\n        }\n        if (feature) {\n          this.featureOverlay.getSource().addFeature(feature);\n        }\n        this.highlight = feature;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" module>\n.map {\n  width: 100%;\n  height: 500px;\n}\n.kaola {\n  width: 100px;\n  &  > img {\n    width: 100%;\n  } \n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShiLiangTuCeng.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShiLiangTuCeng.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ShiLiangTuCeng.vue?vue&type=template&id=59e00355&\"\nimport script from \"./ShiLiangTuCeng.vue?vue&type=script&lang=js&\"\nexport * from \"./ShiLiangTuCeng.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ShiLiangTuCeng.vue?vue&type=style&index=0&lang=less&module=true&\"\n\n\n\n\nfunction injectStyles (context) {\n  \n  this[\"$style\"] = (style0.locals || style0)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  \n)\n\nexport default component.exports","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"ShiLiangTuCeng_map_msPsY\",\"kaola\":\"ShiLiangTuCeng_kaola_1pxXg\"};","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","export { default } from  \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-0-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-0-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-0-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-0-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShiLiangTuCeng.vue?vue&type=style&index=0&lang=less&module=true&\"; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-0-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-0-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-0-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-0-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShiLiangTuCeng.vue?vue&type=style&index=0&lang=less&module=true&\"","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}