{"version":3,"sources":["webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./src/views/ol/TileLayer.vue?1924","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./src/views/ol/TileLayer.vue?41c4","webpack:///./src/views/ol/TileLayer.vue?c474","webpack:///./src/views/ol/js/add-feature.js","webpack:///src/views/ol/TileLayer.vue","webpack:///./src/views/ol/TileLayer.vue?5d1d","webpack:///./src/views/ol/TileLayer.vue"],"names":["BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_LEFT","TOP_CENTER","TOP_RIGHT","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","BaseObject","Overlay","options","call","this","id","insertFirst","undefined","stopEvent","element","document","createElement","className","style","position","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","OverlayPositioning","setPosition","__proto__","prototype","Object","create","constructor","getElement","get","getId","getMap","getOffset","getPosition","getPositioning","appendChild","map","MapEventType","POSTRENDER","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","panIntoView","set","setMap","getTargetElement","mapRect","getRect","getSize","overlayRect","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","Math","abs","center","getView","getCenter","centerPx","getPixelFromCoordinate","newCenterPx","animate","getCoordinateFromPixel","duration","easing","size","box","getBoundingClientRect","offsetX","left","window","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","mapSize","updateRenderedPosition","right","round","offsetWidth","bottom","offsetHeight","getOptions","LineString","SimpleGeometry","coordinates","opt_layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","Array","isArray","setCoordinates","setFlatCoordinates","appendCoordinate","coordinate","flatCoordinates","slice","changed","clone","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","getRevision","sqrt","length","stride","forEachSegment","callback","getCoordinateAtM","m","opt_extrapolate","XYM","XYZM","extrapolate","getCoordinates","getCoordinateAt","fraction","opt_dest","getLength","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","XY","getType","LINE_STRING","intersectsExtent","extent","setLayout","interpolatePoint","end","pointX","NaN","pointY","n","x1","y1","cumulativeLengths","i","x2","y2","push","target","index","t","o","lineStringCoordinateAtM","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","ends","interpolate","ii","module","exports","_vm","_h","$createElement","_c","_self","class","$style","attrs","on","addPoint","_v","removePoint","addLine","removeLine","addPolygon","removePolygon","addOverlay","removeOverlay","staticRenderFns","raster","TileLayer","source","OSM","feature","VectorSource","wrapX","layer","VectorLayer","Map","layers","view","View","fromLonLat","zoom","item","clearPoint","point","Feature","geometry","Point","type","Style","image","Circle","fill","Fill","color","stroke","Stroke","width","radius","zIndex","setStyle","addFeature","panTo","removeFeature","clearLine","line","cood","clearPolygon","coords","coord","polygon","Polygon","clearOverlay","MyComponent","Vue","component","template","ComponentCtor","extend","instance","$mount","overlay","$el","zoomtoCenter","$destroy","maxZoom","fit","getGeometry","padding","setZoom","setCenter","name","data","mounted","initMap","methods","injectStyles","context","locals"],"mappings":"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","file":"js/chunk-4a287a7e.815ec2e1.js","sourcesContent":["/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","export { default } from  \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-0-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-0-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-0-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-0-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TileLayer.vue?vue&type=style&index=0&lang=less&module=true&\"; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-0-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-0-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-0-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-0-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TileLayer.vue?vue&type=style&index=0&lang=less&module=true&\"","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"TileLayer_map_3o5nI\"};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{class:_vm.$style['map'],attrs:{\"id\":\"map\"}}),_c('Button',{on:{\"click\":_vm.addPoint}},[_vm._v(\"添加点\")]),_c('Button',{on:{\"click\":_vm.removePoint}},[_vm._v(\"移除点\")]),_c('Button',{on:{\"click\":_vm.addLine}},[_vm._v(\"添加线\")]),_c('Button',{on:{\"click\":_vm.removeLine}},[_vm._v(\"移除线\")]),_c('Button',{on:{\"click\":_vm.addPolygon}},[_vm._v(\"添加面\")]),_c('Button',{on:{\"click\":_vm.removePolygon}},[_vm._v(\"移除面\")]),_c('Button',{on:{\"click\":_vm.addOverlay}},[_vm._v(\"添加Overlay\")]),_c('Button',{on:{\"click\":_vm.removeOverlay}},[_vm._v(\"移除Overlay\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from \"vue\";\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport Feature from \"ol/Feature.js\";\nimport Overlay from \"ol/Overlay.js\";\nimport { Style, Circle, Fill, Stroke } from \"ol/style\";\nimport { fromLonLat } from \"ol/proj.js\";\nimport { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\nimport { OSM, Vector as VectorSource } from \"ol/source\";\nimport { LineString, Point, Polygon } from \"ol/geom\";\n\nexport default class MAP {\n  constructor() {\n    // 底图图层\n    const raster = new TileLayer({\n      source: new OSM(),\n    });\n    this.feature = null;\n    this.source = new VectorSource({ wrapX: true });\n    // 放置feature的图层\n    const layer = new VectorLayer({\n      source: this.source,\n    });\n    this.map = new Map({\n      layers: [raster, layer],\n      target: \"map\",\n      view: new View({\n        center: fromLonLat([120.32714457090765, 30.30569628128095]),\n        zoom: 11,\n      }),\n    });\n  }\n\n  addPoint(item) {\n    // item = [120,30]\n    this.clearPoint();\n    this.point = new Feature({\n      geometry: new Point(fromLonLat(item)),\n      type: \"point\",\n    });\n    let style = [\n      new Style({\n        image: new Circle({\n          // 填充\n          fill: new Fill({\n            color: \"blue\",\n          }),\n          // 描边\n          stroke: new Stroke({\n            color: \"red\",\n            width: 1,\n          }),\n          radius: 5,\n        }),\n        zIndex: 10,\n      }),\n    ];\n    this.point.setStyle(style);\n    this.source.addFeature(this.point);\n    this.panTo(this.point);\n  }\n  clearPoint() {\n    if (this.point) {\n      this.source.removeFeature(this.point);\n      this.point = null;\n    }\n  }\n  addLine(item) {\n    //item = [[120,30],[121,31]]\n    this.clearLine();\n    this.line = new Feature({\n      geometry: new LineString(\n        item.map((cood) => {\n          return fromLonLat(cood);\n        })\n      ),\n      type: \"line\",\n    });\n    let style = [\n      new Style({\n        fill: new Fill({\n          color: \"blue\",\n        }),\n        // 描边\n        stroke: new Stroke({\n          color: \"red\",\n          width: 5,\n        }),\n        zIndex: 10,\n      }),\n    ];\n    this.line.setStyle(style);\n    this.source.addFeature(this.line);\n    this.panTo(this.line);\n  }\n  clearLine() {\n    if (this.line) {\n      this.source.removeFeature(this.line);\n      this.line = null;\n    }\n  }\n  addPolygon(item) {\n    // item = [\n    //   [[120,30],[120,31],[121,31],[120,31],[120,30]]\n    // ]\n    this.clearPolygon();\n    let coords = item.map((cood) => {\n      return cood.map((coord) => {\n        return fromLonLat(coord);\n      });\n    });\n    this.polygon = new Feature({\n      geometry: new Polygon(coords),\n      type: \"polygon\",\n    });\n    let style = [\n      new Style({\n        fill: new Fill({\n          color: \"blue\",\n        }),\n        // 描边\n        stroke: new Stroke({\n          color: \"red\",\n          width: 1,\n        }),\n        image: new Circle({\n          radius: 7,\n          fill: new Fill({\n            color: \"red\",\n          }),\n        }),\n        zIndex: 10,\n      }),\n    ];\n    this.polygon.setStyle(style);\n    this.source.addFeature(this.polygon);\n    this.panTo(this.polygon);\n  }\n  clearPolygon() {\n    if (this.polygon) {\n      this.source.removeFeature(this.polygon);\n      this.polygon = null;\n    }\n  }\n  addOverlay(coord) {\n    // coord = [120,30]\n    this.clearOverlay();\n    let MyComponent = Vue.component(\"my-component\", {\n      template: `<div>\n        <img style=\"width: 100px;height: 100px;\" src='https://upload.jianshu.io/users/upload_avatars/13491706/5f94e7d8-78bd-4410-9ecc-21363fbb6148?imageMogr2/auto-orient/strip|imageView2/1/w/120/h/120' />\n      </div>`,\n    });\n    const ComponentCtor = Vue.extend(MyComponent);\n    this.instance = new ComponentCtor();\n    this.instance.$mount();\n    this.overlay = new Overlay({\n      positioning: \"bottom-center\",\n      element: this.instance.$el,\n      insertFirst: true,\n      autoPan: false,\n      offset: [0, -10],\n    });\n    this.map.addOverlay(this.overlay);\n    this.overlay.setPosition(fromLonLat(coord));\n    this.zoomtoCenter(fromLonLat(coord));\n  }\n  clearOverlay() {\n    if (this.instance) {\n      this.instance.$destroy();\n    }\n    if (this.overlay) {\n      this.map.removeOverlay(this.overlay);\n      this.overlay = null;\n    }\n  }\n  panTo(feature, maxZoom = 17) {\n    const view = this.map.getView();\n    view.fit(feature.getGeometry(), {\n      padding: [0, 0, 0, 0],\n      maxZoom,\n    });\n  }\n  zoomtoCenter(coord, zoom = 18) {\n    const view = this.map.getView();\n    view.setZoom(zoom);\n    view.setCenter(coord);\n  }\n}\n","<template>\n  <div>\n    <div id=\"map\" :class=\"$style['map']\"></div>\n    <Button @click=\"addPoint\">添加点</Button>\n    <Button @click=\"removePoint\">移除点</Button>\n    <Button @click=\"addLine\">添加线</Button>\n    <Button @click=\"removeLine\">移除线</Button>\n    <Button @click=\"addPolygon\">添加面</Button>\n    <Button @click=\"removePolygon\">移除面</Button>\n    <Button @click=\"addOverlay\">添加Overlay</Button>\n    <Button @click=\"removeOverlay\">移除Overlay</Button>\n  </div>\n</template>\n<script>\nimport Map from \"./js/add-feature.js\";\n\nexport default {\n  name: \"TileLayer\",\n  data() {\n    return {\n      map: null,\n    };\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    initMap() {\n      this.map = new Map();\n    },\n    addPoint() {\n      let point = [120, 30];\n      this.map.addPoint(point);\n    },\n    removePoint() {\n      this.map.clearPoint();\n    },\n    addLine() {\n      let line = [\n        [120, 30],\n        [121, 31],\n      ];\n      this.map.addLine(line);\n    },\n    removeLine() {\n      this.map.clearLine();\n    },\n    addPolygon() {\n      let polygon = [\n        [\n          [120, 30],\n          [120, 31],\n          [121, 31],\n          [121, 30],\n          [120, 30],\n        ],\n      ];\n      this.map.addPolygon(polygon);\n    },\n    removePolygon() {\n      this.map.clearPolygon();\n    },\n    addOverlay() {\n      let coord = [120,30];\n      this.map.addOverlay(coord)\n    },\n    removeOverlay() {\n      this.map.clearOverlay()\n    }\n  },\n};\n</script>\n\n<style lang=\"less\" module>\n.map {\n  width: 100%;\n  height: 500px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TileLayer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TileLayer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TileLayer.vue?vue&type=template&id=b71d25f4&\"\nimport script from \"./TileLayer.vue?vue&type=script&lang=js&\"\nexport * from \"./TileLayer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TileLayer.vue?vue&type=style&index=0&lang=less&module=true&\"\n\n\n\n\nfunction injectStyles (context) {\n  \n  this[\"$style\"] = (style0.locals || style0)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}